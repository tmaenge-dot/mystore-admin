name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      smoke_timeout:
        description: 'Timeout in seconds for compose smoke test'
        required: false
        default: '60'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install
        run: npm ci
      - name: Run tests
        run: npm test

      - name: Build container image
        run: |
          docker build -t mystore-admin:ci .

      - name: Start compose (detached)
        run: |
          docker compose up -d --build

      - name: Run compose smoke test
        id: smoke
        env:
          SMOKE_TIMEOUT: ${{ inputs.smoke_timeout }}
        run: |
          chmod +x ./scripts/compose-smoke.sh
          set -o pipefail
          ./scripts/compose-smoke.sh localhost 5001 "${SMOKE_TIMEOUT}" || echo "SMOKE_FAILED=1" > smoke_status.txt

      - name: Collect compose logs when smoke failed
        if: always()
        run: |
          if [ -f smoke_status.txt ]; then
            mkdir -p ci-logs
            echo "Collecting docker ps and logs" > ci-logs/README.txt
            docker ps -a > ci-logs/docker-ps.txt || true
            docker compose logs --no-color --tail=500 > ci-logs/compose-logs.txt || true
            if command -v podman >/dev/null 2>&1; then
              podman ps -a > ci-logs/podman-ps.txt || true
              podman compose logs --tail=500 > ci-logs/podman-logs.txt || true
            fi
          else
            echo "No smoke_status.txt; skipping log collection" > /dev/null
          fi

      - name: Upload logs artifact when smoke failed
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: ci-logs

      - name: Tear down compose
        if: always()
        run: |
          docker compose down --volumes
